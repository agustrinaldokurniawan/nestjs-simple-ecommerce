var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.251,1,1.463]],["body/controllers/AppController.html",[0,1.868,1,2.184,2,1.455,3,0.784,4,0.661,5,0.661,6,2.422,7,0.55,8,2.184,9,3.624,10,1.455,11,0.058,12,1.074,13,3.049,14,1.701,15,1.605,16,1.007,17,2.422,18,1.074,19,1.772,20,2.422,21,0.784,22,0.353,23,2.422,24,1.455,25,1.701,26,3.049,27,0.035,28,0.044,29,0.035]],["title/modules/AppModule.html",[30,0.924,31,1.463]],["body/modules/AppModule.html",[1,2.182,2,1.634,3,0.641,4,0.541,5,0.541,11,0.059,16,1.201,18,0.878,19,1.869,20,1.98,21,0.641,22,0.289,27,0.028,28,0.039,29,0.028,30,1.378,31,2.654,32,1.189,33,1.189,34,1.643,35,1.643,36,1.189,37,2.578,38,1.643,39,1.98,40,1.98,41,1.98,42,2.176,43,2.257,44,1.643,45,1.643,46,2.493,47,2.72,48,2.493,49,1.98,50,1.189,51,1.189,52,2.493,53,0.878,54,2.493,55,2.493,56,2.493]],["title/injectables/AppService.html",[19,1.075,57,1.251]],["body/injectables/AppService.html",[3,0.836,4,0.705,5,0.705,7,0.586,8,2.275,9,3.711,11,0.058,12,1.146,14,1.814,15,1.671,16,0.836,18,1.146,19,1.671,21,0.836,22,0.376,25,1.814,27,0.037,28,0.046,29,0.037,57,1.946,58,2.143,59,2.583,60,3.251,61,3.251,62,3.251]],["title/classes/CreateProductDto.html",[22,0.304,63,1.251]],["body/classes/CreateProductDto.html",[3,0.467,4,0.394,5,0.394,7,0.327,10,1.86,11,0.057,12,1.374,15,1.678,16,0.467,21,0.467,22,0.21,24,2.3,27,0.021,28,0.031,29,0.021,63,1.3,64,1.013,65,3.253,66,1.196,67,1.796,68,2.727,69,2.799,70,1.598,71,2.569,72,2.569,73,1.177,74,3.097,75,1.456,76,2.172,77,1.442,78,4.368,79,1.442,80,1.442,81,1.442,82,2.397,83,2.726,84,1.815,85,2.726,86,1.815,87,2.698,88,1.013,89,3.097,90,1.442]],["title/classes/Product.html",[22,0.304,75,0.792]],["body/classes/Product.html",[3,0.55,4,0.464,5,0.464,7,0.386,10,2.071,11,0.058,12,1.529,15,1.779,16,0.791,21,0.926,22,0.248,27,0.024,28,0.035,29,0.024,50,1.021,64,1.193,67,2.027,68,2.008,69,2.373,70,1.476,71,2.373,72,2.373,73,1.382,75,1.087,80,1.699,82,2.594,90,1.699,91,1.193,92,3.6,93,4.839,94,2.139,95,2.139,96,2.139,97,2.139,98,2.139,99,3.936,100,2.139,101,3.075,102,3.075,103,2.443,104,2.139,105,2.443,106,2.139,107,3.075,108,1.41,109,1.41,110,1.699,111,1.193,112,1.699]],["title/controllers/ProductController.html",[0,1.251,51,1.251]],["body/controllers/ProductController.html",[0,0.665,2,0.665,3,0.358,4,0.302,5,0.302,7,0.251,8,1.239,10,1.646,11,0.059,12,1.215,14,1.925,16,0.945,17,1.107,18,0.491,21,0.358,22,0.161,23,1.107,24,0.665,25,1.925,27,0.016,28,0.025,29,0.016,51,1.06,53,0.976,63,1.754,70,1.581,73,0.671,75,1.348,76,1.06,87,0.918,88,0.777,113,1.107,114,1.394,115,3.635,116,2.221,117,2.221,118,2.509,119,1.764,120,2.769,121,1.394,122,1.394,123,3.159,124,1.394,125,2.509,126,2.509,127,1.394,128,1.394,129,2.769,130,2.509,131,3.676,132,3.278,133,3.857,134,1.394,135,3.676,136,1.394,137,1.394,138,1.394,139,1.394,140,1.394,141,1.394,142,1.91,143,1.394,144,1.825,145,1.394,146,2.221,147,2.221,148,1.764,149,1.764,150,1.107,151,0.918,152,1.394,153,2.92,154,3.159,155,1.394,156,1.394,157,1.394,158,3.45,159,1.394,160,1.107,161,1.394,162,1.107,163,1.107,164,1.394,165,1.394,166,1.394,167,1.394,168,1.394,169,1.394,170,1.394,171,1.394]],["title/modules/ProductModule.html",[30,0.924,42,1.251]],["body/modules/ProductModule.html",[2,1.703,3,0.682,4,0.575,5,0.575,11,0.059,16,1.16,18,0.934,21,0.682,22,0.307,27,0.03,28,0.04,29,0.03,30,1.422,32,1.265,33,1.265,34,1.747,35,1.747,36,1.265,37,2.66,38,1.747,42,2.216,43,2.353,44,1.747,45,1.747,47,2.106,49,2.106,50,1.265,51,1.926,53,1.636,70,1.086,75,0.8,105,2.106,111,1.992,150,2.106,151,1.747,172,2.106,173,2.106,174,2.65,175,2.65,176,2.65,177,2.65]],["title/injectables/ProductService.html",[53,0.924,57,1.251]],["body/injectables/ProductService.html",[3,0.379,4,0.32,5,0.32,7,0.266,8,1.295,11,0.059,12,1.327,14,1.978,15,1.722,16,0.969,18,0.519,21,0.379,22,0.171,24,0.703,25,1.978,27,0.017,28,0.026,29,0.017,50,0.703,53,0.818,57,1.108,58,0.971,63,1.692,70,1.453,73,1.071,75,1.366,76,1.555,108,0.971,109,0.971,110,2.589,115,3.679,118,2.589,119,1.845,125,2.817,126,2.817,130,1.171,132,2.817,142,1.949,144,2.148,148,2.282,149,1.845,151,0.971,160,2.282,162,1.845,163,1.845,178,1.171,179,2.873,180,2.322,181,1.474,182,3.259,183,1.474,184,2.322,185,2.322,186,1.474,187,2.322,188,1.474,189,1.474,190,2.322,191,1.474,192,2.322,193,1.474,194,1.474,195,1.474,196,1.474,197,1.474,198,1.474,199,1.474,200,1.474,201,1.474,202,1.474,203,2.873,204,2.873,205,2.873,206,1.474,207,1.474,208,1.474,209,1.474]],["title/classes/UpdateProductDto.html",[22,0.304,142,1.251]],["body/classes/UpdateProductDto.html",[3,0.476,4,0.401,5,0.401,7,0.333,10,1.875,11,0.057,12,1.385,15,1.69,16,0.476,21,0.476,22,0.214,24,2.308,27,0.021,28,0.031,29,0.021,64,1.032,66,1.219,67,1.822,68,2.735,69,2.181,70,1.752,71,2.59,72,2.59,73,1.187,74,3.122,75,1.381,76,2.182,77,1.469,79,1.469,81,1.469,82,2.42,87,2.717,88,1.032,89,3.122,142,1.319,144,2.717,153,1.469,210,3.275,211,3.672,212,1.85,213,3.672,214,1.85]],["title/coverage.html",[215,2.336]],["body/coverage.html",[0,1.73,1,1.513,5,0.588,6,2.154,11,0.057,19,1.111,22,0.473,27,0.031,28,0.041,29,0.031,30,0.955,36,1.294,51,1.294,53,0.955,57,1.73,59,2.154,63,1.294,65,2.154,66,2.389,73,0.819,75,0.819,76,1.294,91,2.022,111,1.513,113,2.154,142,1.294,178,2.154,210,2.154,215,1.787,216,2.711,217,2.711,218,2.711,219,4.963,220,3.625,221,2.389,222,2.711,223,4.084,224,3.625,225,4.084,226,3.625,227,2.711,228,2.711]],["title/dependencies.html",[33,1.5,229,2.207]],["body/dependencies.html",[11,0.059,18,1.146,27,0.037,28,0.046,29,0.037,33,1.551,50,1.551,88,1.814,108,2.143,230,4.455,231,3.251,232,3.251,233,3.251,234,4.078,235,3.251,236,3.251,237,3.251,238,3.251,239,3.251,240,3.251,241,3.251,242,3.251,243,3.251,244,3.251,245,3.251,246,3.251]],["title/miscellaneous/functions.html",[247,0.905,248,2.498]],["body/miscellaneous/functions.html",[7,0.689,11,0.051,27,0.043,28,0.051,29,0.043,36,2.281,221,2.519,247,1.567,248,3.037,249,3.037]],["title/index.html",[7,0.398,250,2.207,251,2.207]],["body/index.html",[4,0.536,11,0.057,27,0.028,28,0.039,29,0.028,68,1.379,215,1.629,252,2.472,253,2.472,254,3.405,255,2.472,256,2.472,257,2.472,258,2.472,259,2.472,260,2.472,261,3.894,262,2.472,263,2.472,264,2.472,265,2.472,266,4.66,267,2.472,268,2.472,269,2.472,270,4.548,271,2.472,272,2.472,273,3.405,274,2.472,275,2.472,276,2.472,277,2.472,278,3.405,279,3.405,280,2.472,281,2.472,282,2.472,283,3.405,284,3.405,285,2.472,286,2.472,287,2.472,288,2.472,289,2.472,290,1.964,291,2.472,292,2.472,293,2.472,294,2.472,295,2.472,296,2.472,297,2.472,298,2.472,299,2.472,300,2.472,301,2.472,302,2.472,303,2.472,304,2.472,305,2.472,306,2.472,307,2.472,308,2.472]],["title/modules.html",[32,1.691]],["body/modules.html",[11,0.05,27,0.043,28,0.05,29,0.043,31,2.092,32,1.789,42,1.789,290,3.534,309,4.448,310,4.448,311,4.448]],["title/overview.html",[312,2.816]],["body/overview.html",[2,1.47,11,0.054,19,1.781,27,0.035,28,0.045,29,0.035,30,1.085,31,2.701,32,1.47,33,1.47,34,2.03,35,2.03,36,1.47,37,2.03,38,2.03,39,2.448,40,2.448,41,2.448,42,2.259,43,2.597,44,2.03,45,2.03,53,1.531,58,2.03,64,1.719,172,2.448,173,2.448,312,2.448,313,4.345,314,3.081]],["title/miscellaneous/typealiases.html",[247,0.905,315,3.145]],["body/miscellaneous/typealiases.html",[7,0.689,11,0.051,27,0.043,28,0.051,29,0.043,73,1.154,91,2.132,109,2.965,247,1.567,316,3.822,317,3.037]],["title/miscellaneous/variables.html",[247,0.905,318,2.498]],["body/miscellaneous/variables.html",[7,0.651,11,0.055,27,0.041,28,0.049,29,0.041,30,1.532,73,1.09,91,2.015,103,2.869,111,2.426,112,2.869,221,2.38,247,1.48,249,2.869,317,2.869,318,2.869,319,3.611]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":85,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["1000",{"_index":83,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["2",{"_index":313,"title":{},"body":{"overview.html":{}}}],["2000",{"_index":213,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["3",{"_index":314,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["5.12.2",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":208,"title":{},"body":{"injectables/ProductService.html":{}}}],["aliases",{"_index":316,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":291,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":152,"title":{},"body":{"controllers/ProductController.html":{}}}],["apioperation",{"_index":153,"title":{},"body":{"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{}}}],["apiproperty",{"_index":87,"title":{},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{}}}],["apiproperty({example",{"_index":74,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["apiquery",{"_index":154,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags",{"_index":155,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('product",{"_index":157,"title":{},"body":{"controllers/ProductController.html":{}}}],["app",{"_index":268,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":260,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":31,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":115,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["author",{"_index":301,"title":{},"body":{"index.html":{}}}],["await",{"_index":160,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["backers",{"_index":292,"title":{},"body":{"index.html":{}}}],["body",{"_index":146,"title":{},"body":{"controllers/ProductController.html":{}}}],["bootstrap",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":311,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":309,"title":{},"body":{"modules.html":{}}}],["building",{"_index":255,"title":{},"body":{"index.html":{}}}],["class",{"_index":22,"title":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["classes",{"_index":64,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":172,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":173,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["const",{"_index":110,"title":{},"body":{"classes/Product.html":{},"injectables/ProductService.html":{}}}],["constructor",{"_index":180,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductController.html":{}}}],["constructor(productmodel",{"_index":181,"title":{},"body":{"injectables/ProductService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ProductController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["controller('product",{"_index":156,"title":{},"body":{"controllers/ProductController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["coverage",{"_index":215,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":148,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["create(createproductdto",{"_index":185,"title":{},"body":{"injectables/ProductService.html":{}}}],["createdproduct",{"_index":198,"title":{},"body":{"injectables/ProductService.html":{}}}],["createdproduct.save",{"_index":200,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproduct",{"_index":116,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct(@body",{"_index":159,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct(createproductdto",{"_index":121,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproductdto",{"_index":63,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["date",{"_index":99,"title":{},"body":{"classes/Product.html":{}}}],["date.now",{"_index":90,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["declarations",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{}}}],["default",{"_index":103,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["delete",{"_index":130,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["delete()@apiquery({name",{"_index":128,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteone",{"_index":179,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteone(productid",{"_index":187,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct",{"_index":117,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(@query('productid",{"_index":170,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(id",{"_index":127,"title":{},"body":{"controllers/ProductController.html":{}}}],["dependencies",{"_index":33,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":68,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{},"index.html":{}}}],["development",{"_index":269,"title":{},"body":{"index.html":{}}}],["document",{"_index":107,"title":{},"body":{"classes/Product.html":{}}}],["documentation",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":280,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":256,"title":{},"body":{"index.html":{}}}],["example",{"_index":89,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["exec",{"_index":209,"title":{},"body":{"injectables/ProductService.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["exports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["express",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["find",{"_index":205,"title":{},"body":{"injectables/ProductService.html":{}}}],["findall",{"_index":118,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findone",{"_index":119,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findone(@query('productid",{"_index":166,"title":{},"body":{"controllers/ProductController.html":{}}}],["findone(id",{"_index":138,"title":{},"body":{"controllers/ProductController.html":{}}}],["findone(productid",{"_index":190,"title":{},"body":{"injectables/ProductService.html":{}}}],["framework",{"_index":254,"title":{},"body":{"index.html":{}}}],["function",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":248,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/all",{"_index":164,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('/all')@apioperation({summary",{"_index":136,"title":{},"body":{"controllers/ProductController.html":{}}}],["get()@apiquery({name",{"_index":139,"title":{},"body":{"controllers/ProductController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":250,"title":{"index.html":{}},"body":{}}],["grow",{"_index":287,"title":{},"body":{"index.html":{}}}],["hello",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":298,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":305,"title":{},"body":{"index.html":{}}}],["id",{"_index":135,"title":{},"body":{"controllers/ProductController.html":{}}}],["identifier",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":69,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["injectable",{"_index":57,"title":{"injectables/AppService.html":{},"injectables/ProductService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"injectables/ProductService.html":{},"overview.html":{}}}],["injectmodel",{"_index":195,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectmodel(product.name",{"_index":196,"title":{},"body":{"injectables/ProductService.html":{}}}],["installation",{"_index":265,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":267,"title":{},"body":{"index.html":{}}}],["join",{"_index":294,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":302,"title":{},"body":{"index.html":{}}}],["legend",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["license",{"_index":308,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":284,"title":{},"body":{"index.html":{}}}],["link",{"_index":211,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":162,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["metadata",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["miscellaneous",{"_index":247,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":283,"title":{},"body":{"index.html":{}}}],["mode",{"_index":273,"title":{},"body":{"index.html":{}}}],["model",{"_index":182,"title":{},"body":{"injectables/ProductService.html":{}}}],["module",{"_index":30,"title":{"modules/AppModule.html":{},"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":32,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":108,"title":{},"body":{"classes/Product.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{}}}],["mongoosemodule.forfeature",{"_index":176,"title":{},"body":{"modules/ProductModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost:27017/nest",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":297,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":303,"title":{},"body":{"index.html":{}}}],["name",{"_index":70,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["nest",{"_index":261,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":307,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":88,"title":{},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["new",{"_index":76,"title":{},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["node.js",{"_index":253,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":194,"title":{},"body":{"injectables/ProductService.html":{}}}],["notfoundexception(\"couldn't",{"_index":204,"title":{},"body":{"injectables/ProductService.html":{}}}],["npm",{"_index":266,"title":{},"body":{"index.html":{}}}],["number",{"_index":82,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["one",{"_index":131,"title":{},"body":{"controllers/ProductController.html":{}}}],["open",{"_index":285,"title":{},"body":{"index.html":{}}}],["optional",{"_index":126,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["overview",{"_index":312,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":229,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductController.html":{}}}],["parameters",{"_index":125,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["please",{"_index":295,"title":{},"body":{"index.html":{}}}],["post",{"_index":123,"title":{},"body":{"controllers/ProductController.html":{}}}],["post()@apioperation({summary",{"_index":122,"title":{},"body":{"controllers/ProductController.html":{}}}],["prefix",{"_index":114,"title":{},"body":{"controllers/ProductController.html":{}}}],["price",{"_index":71,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["private",{"_index":197,"title":{},"body":{"injectables/ProductService.html":{}}}],["product",{"_index":75,"title":{"classes/Product.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.controller",{"_index":175,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":149,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["product.dto.ts",{"_index":66,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:14",{"_index":79,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:17",{"_index":214,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:20",{"_index":77,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:23",{"_index":84,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:26",{"_index":86,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":212,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:8",{"_index":81,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.name",{"_index":177,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.schema",{"_index":151,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["product.service",{"_index":150,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["product/product.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["product/product.service",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":51,"title":{"controllers/ProductController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productdocument",{"_index":109,"title":{},"body":{"classes/Product.html":{},"injectables/ProductService.html":{},"miscellaneous/typealiases.html":{}}}],["productid",{"_index":132,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["productid'})@apioperation({summary",{"_index":129,"title":{},"body":{"controllers/ProductController.html":{}}}],["production",{"_index":275,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":184,"title":{},"body":{"injectables/ProductService.html":{}}}],["productmodule",{"_index":42,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productschema",{"_index":111,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":53,"title":{"injectables/ProductService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":252,"title":{},"body":{"index.html":{}}}],["project",{"_index":286,"title":{},"body":{"index.html":{}}}],["prop",{"_index":93,"title":{},"body":{"classes/Product.html":{}}}],["prop({type",{"_index":100,"title":{},"body":{"classes/Product.html":{}}}],["properties",{"_index":67,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["put",{"_index":147,"title":{},"body":{"controllers/ProductController.html":{}}}],["put()@apiquery({name",{"_index":143,"title":{},"body":{"controllers/ProductController.html":{}}}],["query",{"_index":133,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('productid",{"_index":168,"title":{},"body":{"controllers/ProductController.html":{}}}],["read",{"_index":296,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["reflect",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":264,"title":{},"body":{"index.html":{}}}],["required",{"_index":101,"title":{},"body":{"classes/Product.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["rimraf",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":270,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":257,"title":{},"body":{"index.html":{}}}],["schema",{"_index":105,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{}}}],["schemafactory",{"_index":106,"title":{},"body":{"classes/Product.html":{}}}],["schemafactory.createforclass(product",{"_index":112,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":258,"title":{},"body":{"index.html":{}}}],["side",{"_index":259,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"index.html":{}}}],["sponsors",{"_index":289,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":249,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../product.schema.ts",{"_index":317,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":221,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/product/create",{"_index":65,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/product.controller.ts",{"_index":113,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:30",{"_index":124,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:38",{"_index":137,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:45",{"_index":140,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:52",{"_index":145,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:62",{"_index":134,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":174,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.schema.ts",{"_index":91,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/product/product.schema.ts:12",{"_index":95,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.schema.ts:15",{"_index":94,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.schema.ts:18",{"_index":97,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.schema.ts:21",{"_index":98,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.schema.ts:24",{"_index":104,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.schema.ts:9",{"_index":96,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.service.ts",{"_index":178,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:15",{"_index":186,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:20",{"_index":189,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:24",{"_index":191,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:34",{"_index":193,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:47",{"_index":188,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":183,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/update",{"_index":210,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["start",{"_index":271,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":274,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":276,"title":{},"body":{"index.html":{}}}],["started",{"_index":251,"title":{"index.html":{}},"body":{}}],["starter",{"_index":263,"title":{},"body":{"index.html":{}}}],["statements",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":299,"title":{},"body":{"index.html":{}}}],["stock",{"_index":72,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["success",{"_index":163,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["summary",{"_index":158,"title":{},"body":{"controllers/ProductController.html":{}}}],["support",{"_index":290,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":310,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":279,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":282,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":281,"title":{},"body":{"index.html":{}}}],["tests",{"_index":278,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":288,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.productmodel",{"_index":207,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel(createproductdto",{"_index":199,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.find().exec",{"_index":201,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findbyid(productid).exec",{"_index":202,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findbyidandupdate",{"_index":206,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.create(createproductdto",{"_index":161,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.deleteone(id",{"_index":171,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":165,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":167,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":169,"title":{},"body":{"controllers/ProductController.html":{}}}],["throw",{"_index":203,"title":{},"body":{"injectables/ProductService.html":{}}}],["time",{"_index":92,"title":{},"body":{"classes/Product.html":{}}}],["touch",{"_index":300,"title":{},"body":{"index.html":{}}}],["true",{"_index":102,"title":{},"body":{"classes/Product.html":{}}}],["twitter",{"_index":306,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":315,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":262,"title":{},"body":{"index.html":{}}}],["ui",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":80,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["unit",{"_index":277,"title":{},"body":{"index.html":{}}}],["update",{"_index":144,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["update(productid",{"_index":192,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproduct",{"_index":120,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateproduct(id",{"_index":141,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateproductdto",{"_index":142,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["uri",{"_index":78,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["value",{"_index":319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":318,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":272,"title":{},"body":{"index.html":{}}}],["website",{"_index":304,"title":{},"body":{"index.html":{}}}],["world",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":293,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProductController } from './product/product.controller';\nimport { ProductService } from './product/product.service';\nimport { ProductModule } from './product/product.module';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot('mongodb://localhost:27017/nest'),\n    ProductModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/create-product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                image\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: description product, description: 'description of new product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/create-product.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: image uri product, description: 'image uri of new product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/create-product.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: undefined, description: 'name of new product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/create-product.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 1000, description: 'price uri of new product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/create-product.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 100, description: 'stock uri of new product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/create-product.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProductDto {\n  @ApiProperty({\n    example: `${Date.now()} product`,\n    description: 'name of new product',\n  })\n  readonly name: string;\n\n  @ApiProperty({\n    example: `image uri product`,\n    description: 'image uri of new product',\n  })\n  readonly image: string;\n\n  @ApiProperty({\n    example: `description product`,\n    description: 'description of new product',\n  })\n  readonly description: string;\n\n  @ApiProperty({ example: 1000, description: 'price uri of new product' })\n  readonly price: number;\n\n  @ApiProperty({ example: 100, description: 'stock uri of new product' })\n  readonly stock: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                stock\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.schema.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: Date, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/product.schema.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ProductDocument = Product & Document;\n\n@Schema()\nexport class Product {\n  @Prop()\n  name: string;\n\n  @Prop()\n  image: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  price: number;\n\n  @Prop()\n  stock: number;\n\n  @Prop({ type: Date, required: true, default: Date.now() })\n  time: Date;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Post new Product'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiQuery({name: 'productId'})@ApiOperation({summary: 'Delete one Product By productId Query'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/all')@ApiOperation({summary: 'Get All Product'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiQuery({name: 'productId'})@ApiOperation({summary: 'Get One Product By productId Query'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiQuery({name: 'productId'})@ApiOperation({summary: 'Update one Product By productId Query'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport { CreateProductDto } from './create-product.dto';\nimport { ProductService } from './product.service';\nimport { Product } from './product.schema';\nimport { UpdateProductDto } from './update-product.dto';\nimport {\n  ApiBody,\n  ApiOperation,\n  ApiProperty,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@Controller('product')\n@ApiTags('Product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Post new Product' })\n  async createProduct(@Body() createProductDto: CreateProductDto) {\n    await this.productService.create(createProductDto);\n\n    return { message: 'Create product success.' };\n  }\n\n  @Get('/all')\n  @ApiOperation({ summary: 'Get All Product' })\n  async findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get()\n  @ApiQuery({ name: 'productId' })\n  @ApiOperation({ summary: 'Get One Product By productId Query' })\n  async findOne(@Query('productId') id) {\n    return this.productService.findOne(id);\n  }\n\n  @Put()\n  @ApiQuery({ name: 'productId' })\n  @ApiOperation({ summary: 'Update one Product By productId Query' })\n  async updateProduct(\n    @Query('productId') id,\n    @Body() updateProductDto: UpdateProductDto,\n  ) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete()\n  @ApiQuery({ name: 'productId' })\n  @ApiOperation({ summary: 'Delete one Product By productId Query' })\n  async deleteProduct(@Query('productId') id) {\n    return this.productService.deleteOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService\n\nProductService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProductController } from './product.controller';\nimport { Product, ProductSchema } from './product.schema';\nimport { ProductService } from './product.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n  ],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(productId: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Product, ProductDocument } from './product.schema';\nimport { CreateProductDto } from './create-product.dto';\nimport { UpdateProductDto } from './update-product.dto';\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @InjectModel(Product.name)\n    private readonly productModel: Model,\n  ) {}\n\n  async create(createProductDto: CreateProductDto) {\n    const createdProduct = new this.productModel(createProductDto);\n    return createdProduct.save();\n  }\n\n  async findAll() {\n    return this.productModel.find().exec();\n  }\n\n  async findOne(productId: string) {\n    const product = await this.productModel.findById(productId).exec();\n\n    if (!product) {\n      throw new NotFoundException(\"Couldn't find the product.\");\n    }\n\n    return product;\n  }\n\n  async update(productId: string, updateProductDto: UpdateProductDto) {\n    const product = await this.productModel.findByIdAndUpdate(\n      productId,\n      updateProductDto,\n    );\n\n    if (!product) {\n      throw new NotFoundException(\"Couldn't find the product.\");\n    }\n\n    return { message: 'Update product success.' };\n  }\n\n  async deleteOne(productId: string) {\n    const product = await this.productModel\n      .deleteOne({ _id: productId })\n      .exec();\n\n    if (!product) {\n      throw new NotFoundException(\"Couldn't find the product.\");\n    }\n\n    return { message: 'Delete product success.' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/update-product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                image\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'update description', description: 'new description of product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/update-product.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'update link', description: 'new link of product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/update-product.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'update name', description: 'new name of product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/update-product.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 2000, description: 'new price of product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/update-product.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 2000, description: 'new stock of product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/product/update-product.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiOperation, ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateProductDto {\n  @ApiProperty({ example: 'update name', description: 'new name of product' })\n  readonly name: string;\n\n  @ApiProperty({ example: 'update link', description: 'new link of product' })\n  readonly image: string;\n\n  @ApiProperty({\n    example: 'update description',\n    description: 'new description of product',\n  })\n  readonly description: string;\n\n  @ApiProperty({ example: 2000, description: 'new price of product' })\n  readonly price: number;\n\n  @ApiProperty({ example: 2000, description: 'new stock of product' })\n  readonly stock: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            mongoose : ^5.12.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProductDocument   (src/.../product.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/product/product.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProductDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/product/product.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ProductSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Product)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
